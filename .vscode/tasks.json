{
  "version": "2.0.0",
	"tasks": [
		{
			"label": "build: example",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/example"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"label": "build: array",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/array"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: assert",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/assert"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: auto",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/auto"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: concurrency",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/concurrency"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: const",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/const"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build",
			"problemMatcher": "$gcc"
		},
		{
			"label": "build: decltype",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/decltype"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: enum",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/enum"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: file",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/file"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: find",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/find"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: for_each",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/for_each"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: for-loop",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/for-loop"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: function",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/function"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: functional-programming",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/functional-programming"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: immutability",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/immutability"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: iostream",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/iostream"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: lambda",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/lambda"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: lazy-evaluation",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/lazy-evaluation"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: meta-programming",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/meta-programming"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: recursion",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/recursion"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: regex",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/regex"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: smart-pointer",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/smart-pointer"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: sort",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/sort"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: span",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/span"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: time",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/time"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: tuple",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/tuple"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "build: vector",
			"type": "shell",
			"options": {
				"cwd": "${workspaceRoot}/playground/vector"
			},
			"command": "mkdir -p build && cd build && cmake .. && make",
			"group": "build"
		},
		{
			"label": "clean",
			"type": "shell",
			"command": "rm -rf **/build"
		}
	]
}
